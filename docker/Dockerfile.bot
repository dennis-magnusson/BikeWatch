FROM python:3.12-alpine AS builder

# Install build dependencies
RUN apk add --no-cache gcc musl-dev

# Create and activate virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy only requirements first to leverage Docker cache
COPY ./bot/pyproject.toml /app/pyproject.toml
COPY ./common/ /common/

WORKDIR /app
RUN pip install --no-cache-dir -e . && \
  pip install --no-cache-dir -e ../common && \
  # Remove pip cache and unnecessary files
  find /opt/venv -type d -name "__pycache__" -exec rm -r {} + && \
  find /opt/venv -type f -name "*.pyc" -delete

# Final stage
FROM python:3.12-alpine

# Copy only the necessary files from builder
COPY --from=builder /opt/venv /opt/venv
COPY ./bot/src/ /app/src/
COPY ./common/ /common/

# Make sure we use the virtualenv and set Python to not write bytecode
ENV PATH="/opt/venv/bin:$PATH" \
  PYTHONDONTWRITEBYTECODE=1 \
  PYTHONUNBUFFERED=1

WORKDIR /app
CMD ["python", "src/main.py"]